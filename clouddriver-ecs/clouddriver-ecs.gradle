sourceSets {
  integration {
    java.srcDirs = ["src/integration/java"]
    resources.srcDirs = ["src/integration/resources"]
    compileClasspath += main.output + test.output
  }
}

configurations {
  integrationImplementation.extendsFrom testImplementation
  integrationRuntime.extendsFrom testRuntime
}

dependencies {
  implementation project(":cats:cats-core")
  implementation project(":clouddriver-api")
  implementation project(":clouddriver-artifacts")
  implementation project(":clouddriver-aws")
  implementation project(":clouddriver-core")
  implementation project(":clouddriver-security")

  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"
  testAnnotationProcessor "org.projectlombok:lombok"

  implementation "com.amazonaws:aws-java-sdk:1.12.433"
  implementation "com.github.ben-manes.caffeine:guava"
  implementation "com.netflix.awsobjectmapper:awsobjectmapper:1.12.261"
  implementation "com.netflix.frigga:frigga:0.26.0"
  implementation "com.netflix.spectator:spectator-api:1.5.3"
  implementation "io.spinnaker.fiat:fiat-api:$fiatVersion"
  implementation "io.spinnaker.fiat:fiat-core:$fiatVersion"
  implementation "io.spinnaker.kork:kork-artifacts"
  implementation "io.spinnaker.kork:kork-credentials"
  implementation "io.spinnaker.kork:kork-credentials-api"
  implementation "io.spinnaker.kork:kork-exceptions"
  implementation "io.spinnaker.kork:kork-moniker"
  implementation "com.squareup.okhttp:okhttp:2.7.5"
  implementation "com.squareup.okhttp:okhttp-apache:2.7.5"
  implementation "com.squareup.okhttp:okhttp-urlconnection:2.7.5"
  implementation "com.squareup.retrofit:converter-jackson:1.9.0"
  implementation "com.squareup.retrofit:retrofit:1.9.0"
  implementation "commons-io:commons-io"
  implementation "org.apache.commons:commons-lang3"
  implementation "org.apache.httpcomponents:httpclient"
  implementation "org.apache.httpcomponents:httpcore"
  implementation "org.apache.groovy:groovy:4.0.9"
  implementation "org.springframework.boot:spring-boot-starter-test"
  implementation "org.springframework.boot:spring-boot-starter-web"

  testImplementation "cglib:cglib-nodep:3.3.0"
  testImplementation "org.mockito:mockito-core"
  testImplementation "org.objenesis:objenesis:2.5.1"
  testImplementation "org.spockframework:spock-core:2.4-M1-groovy-4.0"
  testImplementation "org.spockframework:spock-spring"

  integrationImplementation project(":clouddriver-web")
  integrationImplementation "org.springframework:spring-test"
  integrationImplementation "org.testcontainers:mysql"
  integrationImplementation "mysql:mysql-connector-java:8.0.20"
  integrationImplementation sourceSets.test.output
  integrationImplementation sourceSets.main.output
  integrationImplementation ("io.rest-assured:rest-assured:4.0.0") {
    exclude group: "org.codehaus.groovy", module: "groovy" // use kork's version
  }
}

task integrationTest(type: Test) {
  description = "Runs Amazon ECS provider integration tests."
  group = 'verification'

  environment "PROJECT_ROOT", project.rootDir.toString()
  useJUnitPlatform()

  testClassesDirs = sourceSets.integration.output.classesDirs
  classpath = sourceSets.integration.runtimeClasspath
  shouldRunAfter test
}
