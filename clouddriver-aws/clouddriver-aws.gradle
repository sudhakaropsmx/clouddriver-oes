plugins {
  id 'com.adarshr.test-logger' version '2.1.0'
}

sourceSets {
  integration {
    java.srcDirs = ["src/integration/java"]
    resources.srcDirs = ["src/integration/resources"]
    compileClasspath += main.output + test.output
  }
}

configurations {
  integrationImplementation.extendsFrom testImplementation
  integrationRuntime.extendsFrom testRuntime
}

dependencies {
  implementation project(":cats:cats-core")
  implementation project(":clouddriver-api")
  implementation project(":clouddriver-configserver")
  implementation project(":clouddriver-core")
  implementation project(":clouddriver-eureka")
  implementation project(":clouddriver-security")
  implementation project(":clouddriver-saga")

  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"
  testAnnotationProcessor "org.projectlombok:lombok"

  implementation "javax.inject:javax.inject:1"
  implementation "com.amazonaws:aws-java-sdk:1.12.433"
  implementation "com.github.ben-manes.caffeine:guava"
  implementation "com.netflix.awsobjectmapper:awsobjectmapper:1.12.261"
  implementation "com.netflix.frigga:frigga:0.26.0"
  implementation "io.spinnaker.fiat:fiat-api:$fiatVersion"
  implementation "io.spinnaker.fiat:fiat-core:$fiatVersion"
  implementation "io.spinnaker.kork:kork-cloud-config-server"
  implementation "io.spinnaker.kork:kork-core"
  implementation "io.spinnaker.kork:kork-aws"
  implementation "io.spinnaker.kork:kork-exceptions"
  implementation "io.spinnaker.kork:kork-secrets"
  implementation "io.spinnaker.kork:kork-security"
  implementation "io.spinnaker.kork:kork-credentials"
  implementation "io.spinnaker.kork:kork-moniker"
  implementation "io.spinnaker.kork:kork-retrofit"
  implementation "com.squareup.okhttp:okhttp:2.7.5"
  implementation "com.squareup.okhttp:okhttp-apache:2.7.5"
  implementation "com.squareup.okhttp:okhttp-urlconnection:2.7.5"
  implementation "com.squareup.retrofit:converter-jackson:1.9.0"
  implementation "com.squareup.retrofit:retrofit:1.9.0"
  implementation "io.reactivex.rxjava3:rxjava:3.1.6"
  implementation "org.apache.httpcomponents:httpclient"
  implementation "org.apache.httpcomponents:httpcore"
  implementation "org.apache.groovy:groovy:4.0.9"
  implementation "org.springframework.boot:spring-boot-actuator"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation 'com.aestasit.infrastructure.sshoogr:sshoogr:0.9.25'
  implementation 'com.jcraft:jsch.agentproxy.connector-factory:0.0.9'
  implementation 'com.jcraft:jsch.agentproxy.jsch:0.0.9'
  implementation "com.github.wnameless.json:json-flattener:0.11.1"

  testImplementation "io.spinnaker.kork:kork-exceptions"
  testImplementation "cglib:cglib-nodep:3.3.0"
  testImplementation "com.natpryce:hamkrest:1.4.2.2"
  testImplementation "com.google.guava:guava"
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "org.junit.platform:junit-platform-runner"
  testImplementation "org.objenesis:objenesis:2.5.1"
  testImplementation "org.spockframework:spock-core:2.4-M1-groovy-4.0"
  testImplementation "org.spockframework:spock-spring"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.springframework:spring-test"

  integrationImplementation project(":clouddriver-web")
  integrationImplementation "org.springframework:spring-test"
  integrationImplementation sourceSets.test.output
  integrationImplementation sourceSets.main.output
  integrationImplementation ("io.rest-assured:rest-assured:4.0.0") {
    exclude group: "org.codehaus.groovy", module: "groovy" // use kork's version
  }
}

task integrationTest(type: Test) {
  description = "Runs AWS EC2 provider integration tests."
  group = 'verification'

  environment "PROJECT_ROOT", project.rootDir.toString()
  useJUnitPlatform()

  testClassesDirs = sourceSets.integration.output.classesDirs
  classpath = sourceSets.integration.runtimeClasspath
  shouldRunAfter test

  testlogger {
    theme 'mocha'
    showFailedStandardStreams true
  }
}
